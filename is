<!-- generator.html --><!DOCTYPE html><html>
<head>
  <title>License Key Generator</title>
  <meta charset="UTF-8">
  <style>
    body { font-family: Arial; padding: 20px; }
    .key-box { margin-top: 20px; padding: 10px; border: 1px solid #ccc; width: fit-content; }
  </style>
</head>
<body>
  <h2>Generate License Key</h2>
  <button onclick="generateKey()">Generate</button>
  <div class="key-box" id="output"></div>  <script>
    function generateKey() {
      const prefix = "BOSSJUN";
      const part1 = Math.random().toString(36).substring(2, 6).toUpperCase();
      const part2 = Math.random().toString(36).substring(2, 6).toUpperCase();
      const timestamp = Date.now();
      const key = `${prefix}-${part1}-${part2}`;
      const fullKey = btoa(JSON.stringify({ key, timestamp }));
      document.getElementById("output").textContent = fullKey;
    }
  </script></body>
</html><!-- validator.html --><!DOCTYPE html><html>
<head>
  <title>License Validator</title>
  <meta charset="UTF-8">
  <style>
    body { font-family: Arial; padding: 20px; }
    input { width: 300px; }
  </style>
</head>
<body>
  <h2>Enter License Key</h2>
  <input id="keyInput" placeholder="Paste license key here" />
  <button onclick="validateKey()">Validate</button>
  <div id="result" style="margin-top:10px;"></div>  <script>
    function validateKey() {
      const input = document.getElementById("keyInput").value;
      const result = document.getElementById("result");

      try {
        const decoded = atob(input);
        const { key, timestamp } = JSON.parse(decoded);

        // Check if already used
        if (localStorage.getItem(key)) {
          result.textContent = "Invalid: Key already used.";
          return;
        }

        // Check if expired
        const now = Date.now();
        if (now - timestamp > 3600000) { // 1 hour in ms
          result.textContent = "Invalid: Key expired.";
          return;
        }

        // Valid
        localStorage.setItem(key, true);
        result.textContent = "Valid Key: Access granted.";
      } catch (e) {
        result.textContent = "Invalid key format.";
      }
    }
  </script></body>
</html>
